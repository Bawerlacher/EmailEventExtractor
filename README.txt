Project name: Email Event Extractor
Date: December 6th
Author: Yihan Wang
Source of help: 



Project Description:
The system can extract event information from an email that contains events. It consists of three parts:
1. Named-entity recognition model that can tag events, dates, time and locations.
2. Neural machine translation model that can translate dates in arbitrary formats into structured formats.
3. Neural machine translation model that can translate time in arbitrary formats into structured formats.

The NER(Named-entity recognition) model is trained with transfer learning: it was originally a pre-trained 
NER model called "en_core_lg" from spaCy library and updated by about 70 examples collected from my mailbox 
and manually labeled with several thousands iterations. 

The structure for two Neural machine translation models for date and time are very similar. They are both 
Bi-directional LSTM with attention model. They are trained with fake dates and times generated by codes. 


Running instructions:
To run the project, environment for tensorflow, keras and spaCy is required. Use the command below to install them:
pip install tensorflow
pip install keras
pip install spaCy

To run the email event extractor, simply run all cells in the jupyter notebook EmailEventExtractor.ipynb. You can modified
the input text by changing the text variable in the last cells.

To run the training part of NER model, run train_model.py.

To run the training part of Neural machine translation models of date and time, go to the folder "translation_model_trainer"
and run all the cells in "date_translator.ipynb" and "time_translator.ipynb" respectively for date and time.

Date and time data generation part is in the folder "date_generator". Run all cells in "Date_generator.ipynb" and 
"Time generator.ipynb" respectively for date data and time data.


Reference:
1. Guideline for NER system of spaCy library: https://spacy.io/usage/training/#ner
2. Course project "Neural Machine Translation" from Sequence Models of Deep Learning course series on Coursera. 
(Source may not be available because it's a paid course series. It's a guideline on how to build a neural machine 
translation system on date.)